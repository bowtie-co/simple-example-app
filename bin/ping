#!/bin/bash

default_protocol=${APP_PROTOCOL:-"http://"}
default_host=${APP_HOST:-"127.0.0.1:8888"}
default_url="${default_protocol}${default_host}"
url=${1:-$default_url}
interval=${2:-2}
show_ok_every=30

# COLORS! :)
red='\033[0;31m'
cyan='\033[0;36m'
blue='\033[0;34m'
green='\033[0;32m'
yellow='\033[0;33m'
nocolor='\033[0m'

confirmYes() {
  echo ""
  msg="${1:-Are you sure?}"
  read -r -p "${msg} [Y/n] " response
  case "$response" in
    [nN][oO]|[nN])
      return 1
      ;;
    *)
      return 0
      ;;
  esac
}

error() {
  stamp=$(date)
  prefix="${stamp} [ERROR] "
  echo
  echo -e "${red}${prefix}${1}${nocolor}"
  echo
}

warn() {
  stamp=$(date)
  prefix="${stamp} [WARNING] "
  echo
  echo -e "${yellow}${prefix}${1}${nocolor}"
  echo
}

good() {
  stamp=$(date)
  prefix="${stamp} [GOOD] "
  echo
  echo -e "${green}${prefix}${1}${nocolor}"
  echo
}

log() {
  stamp=$(date)
  prefix="${stamp} [INFO] "
  echo
  echo -e "${cyan}${prefix}${1}${nocolor}"
  echo
}

status=0
outage=0
running=0
duration=0

log "Running ping (${interval}s interval) on URL: '$url' ..."

while true; do
  if [ -d /scripts ] && [ -x /scripts/test ]; then
    /scripts/test $url
  else
    bin/test $url
  fi



  if [[ "$?" != "0" ]]; then
    outage=$(expr $outage + $interval)
    details="$url not returning 200 - Outage: ${outage}s - Duration: ${duration}s"

    if [[ "$status" != "0" ]]; then
      warn "Still failing! ($details)"
    else
      warn "Failed request! ($details)"

      curl -IL $url
    fi

    status=1
  else

    if [[ "$status" != "0" ]]; then
      running=0
      log "Outage: ${outage}s ($url was down for $outage seconds - Duration: ${duration}s)"
    else
      show_ok=$(($duration % $show_ok_every))

      if [[ $show_ok -lt $interval ]]; then
        good "OK ($url returning 200 - Alive: ${running}s - Duration: ${duration}s)"
      fi

      running=$(expr $running + $interval)
    fi

    status=0
    outage=0
  fi

  sleep $interval

  duration=$(expr $duration + $interval)
done
